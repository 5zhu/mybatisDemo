<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mubatis.org/dtd/mybatis-3-mapper.dtd">
<!--此文件是 MyBatis 的映射文件-->
<!--namespace 表示命名空间-->
<mapper namespace="com.demo2.mapper.UserMapper">
    <select id="findUserById" parameterType="Integer" resultType="com.demo.entity.User">
        <!--根据 ID 获取User信息
           将sql语句封装到mappedStatement对象当中，所以id="findUserById"是statement的id
           parameterType ：指定输入的参数类型
        -->

        <!--#{} 相当与 ? 表示一个占位符 #{}可以是自己定义-->
        select * from t_user where id = #{id}
    </select>
      <!--与#{}不同 ${}是拼接sql串 ${}中只能是value
      resultType 单条数据的类型
      -->
    <select id="findUserByName" parameterType="String" resultType="com.demo.entity.User">
        select * from t_user where username like '%${value}%'
    </select>

    <insert id="insertUser" parameterType="com.demo.entity.User">
        insert into t_user (username, password, account, gender, id_card, perset)
        values (#{username}, #{password}, #{account}, #{gender}, #{idCard}, #{perset})
    </insert>

    <insert id="insertUserRetKey" parameterType="com.demo.entity.User">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            select nextval('t_user_seq')
        </selectKey>
        insert into public.t_user (username, password, account, gender, id_card, perset)
        values (#{username}, #{password}, #{account}, #{gender}, #{idCard}, #{perset})
    </insert>

    <!--
    通过parameterType指定输入参数的类型，类型可以是
    简单类型
    hashmap
    pojo的包装类型
    -->
    <select id="findUserList" parameterType="com.demo3.UserCondition"
            resultType="com.demo3.CustomUser">
        SELECT * FROM t_user u WHERE u.gender=#{user.gender} AND u.username LIKE '%${user.username}%'
    </select>


</mapper>